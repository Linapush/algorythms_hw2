#Если у нас есть четные и нечетные индексы, правильно сгенерировать данные. Есть пара маленьких хитростей, которые сделают ваш код чище:

#nums = [0] * (n + 2) если n = 0
#nums[i] = nums[i//2] + nums[(i//2)+1] * (i%2) для четных и нечетных индексов
# максимум среди первых n + 1 элементов

#сложность - O(n)

class Solution:
    def getMaximumGenerated(self, n):
        
        nums = [0] * (n+2) #если n = 0
        nums[1] = 1
        for i in range(2, n + 1): #в значениях от 2 до n + 1
            nums[i] = nums[i//2] + nums[(i//2)+1] * (i%2) #для четных и нечетных индексов
    
        return max(nums[:n+1]) #максимальное значение среди элементов

